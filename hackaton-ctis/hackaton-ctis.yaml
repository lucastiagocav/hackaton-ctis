swagger: "2.0"
info:
  description: "Contrato rest para o hackaton"
  version: "1.0.0"
  title: "Hackaton CTIS"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "petstore.swagger.io"
basePath: "/v2"

schemes:
- "https"
- "http"
paths:
  /pessoas:
    post:
      tags:
      - "pessoa"
      summary: "Adiciona uma nova pessoa"
      description: ""
      operationId: "addPessoa"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Pessoa a ser inserida no banco"
        required: true
        schema:
          $ref: "#/definitions/Pessoa"
      responses:
        405:
          description: "Invalid input"
  /pessoas/{id}:
    put:
      tags:
      - "pessoa"
      summary: "Atualiza uma pessoa existente"
      description: ""
      operationId: "updatePessoa"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID da pessoa a ser atualizada"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Pessoa a ser atualizada"
        required: true
        schema:
          $ref: "#/definitions/Pessoa"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Pessoa não encontrada"
        405:
          description: "Validation exception"
    get:
      tags:
      - "pessoa"
      summary: "Procurar pessoa por ID"
      description: "Retorna uma única pessoa"
      operationId: "getPetById"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID da pessoa a ser retornada"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Pessoa"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Pessoa não encontrada"
    delete:
      tags:
      - "pessoa"
      summary: "Deleta uma pessoa"
      description: ""
      operationId: "deletePessoa"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID da pessoa a ser deletada"
        required: true
        type: "integer"
        format: "int64"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Pessoa não encontrada"
  /empresas:
    post:
      tags:
      - "empresa"
      summary: "Adiciona uma nova empresa"
      description: ""
      operationId: "addEmpresa"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Empresa a ser inserida no banco"
        required: true
        schema:
          $ref: "#/definitions/Empresa"
      responses:
        405:
          description: "Invalid input"
  /empresas/{id}:
    put:
      tags:
      - "empresa"
      summary: "Atualiza uma empresa existente"
      description: ""
      operationId: "updateEmpresa"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID da empresa a ser atualizada"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Empresa a ser atualizada"
        required: true
        schema:
          $ref: "#/definitions/Empresa"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Empresa não encontrada"
        405:
          description: "Validation exception"
    get:
      tags:
      - "empresa"
      summary: "Procurar empresa por ID"
      description: "Retorna uma única empresa"
      operationId: "getEmpresaById"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID da empresa a ser retornada"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Empresa"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Empresa não encontrada"
    delete:
      tags:
      - "empresa"
      summary: "Deleta uma empresa"
      description: ""
      operationId: "deleteEmpresa"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID da empresa a ser deletada"
        required: true
        type: "integer"
        format: "int64"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Empresa não encontrada"

  /produtos:
    post:
      tags:
      - "produto"
      summary: "Adiciona uma nova produto"
      description: ""
      operationId: "addProduto"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Produto a ser inserida no banco"
        required: true
        schema:
          $ref: "#/definitions/Produto"
      responses:
        405:
          description: "Invalid input"
  /produtos/{id}:
    put:
      tags:
      - "produto"
      summary: "Atualiza uma produto existente"
      description: ""
      operationId: "updateProduto"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID da produto a ser atualizada"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Produto a ser atualizada"
        required: true
        schema:
          $ref: "#/definitions/Produto"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Produto não encontrada"
        405:
          description: "Validation exception"
    get:
      tags:
      - "produto"
      summary: "Procurar produto por ID"
      description: "Retorna uma única produto"
      operationId: "getProdutoById"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID da produto a ser retornada"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Produto"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Produto não encontrada"
    delete:
      tags:
      - "produto"
      summary: "Deleta uma produto"
      description: ""
      operationId: "deleteProduto"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID da produto a ser deletada"
        required: true
        type: "integer"
        format: "int64"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Produto não encontrada"

definitions:
  Endereco:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      logradouro:
        type: "string"
      numero:
        type: "string"
      complemento:
        type: "string"
      bairro:
        type: "string"
      cidade:
        type: "string"
      uf:
        type: "string"
    xml:
      name: "Category"
  Produto:
    type: "object"
    required:
    - "nome"
    - "preco"
    properties:
      id:
        type: "integer"
        format: "int64"
      nome:
        type: "string"
      preco:
        type: "number"
      dataCriacao:
        type: "number"
      categorias:
        type: "array"
        items:
          type: "string"
      status:
        description: "Status do produto"
        enum:
        - "ativo"
        - "inativo"
    xml:
      name: "User"
  Telefone:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      telefone:
        type: "string"
    xml:
      name: "Tag"
  Pessoa:
    type: "object"
    required:
    - "nome"
    - "cpf"
    - "email"
    properties:
      id:
        type: "integer"
        format: "int64"
      endereco:
        $ref: "#/definitions/Endereco"
      nome:
        type: "string"
        example: "Alysson"
      sobrenome:
        type: "string"
        example: "da Silva"
      email:
        type: "string"
        example: "alysson@ctis.com.br"
      cpf:
        type: "string"
        example: "1234567890"
      telefones:
        type: "array"
        items:
          $ref: "#/definitions/Telefone"
      status:
        type: "string"
        description: "Status da pessoa"
        enum:
        - "ativo"
        - "inativo"
    xml:
      name: "Pet"
  Empresa:
    type: "object"
    required:
    - "razaoSocial"
    - "cnpj"
    - "email"
    properties:
      id:
        type: "integer"
        format: "int64"
      endereco:
        $ref: "#/definitions/Endereco"
      razaoSocial:
        type: "string"
        example: "CTIS LTDA"
      nomeFantasia:
        type: "string"
        example: "Bicicletaria do João"
      email:
        type: "string"
        example: "bike@ctis.com.br"
      cnpj:
        type: "string"
        example: "1234567890"
      telefones:
        type: "array"
        items:
          $ref: "#/definitions/Telefone"
      status:
        type: "string"
        description: "Status da Empresa"
        enum:
        - "ativo"
        - "inativo"
    xml:
      name: "Pet"
  
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
